$date
	Wed Dec 11 19:50:43 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_ALU $end
$var wire 8 ! Result [7:0] $end
$var reg 8 " A [7:0] $end
$var reg 8 # B [7:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$var reg 3 & sel [2:0] $end
$scope module uut $end
$var wire 8 ' A [7:0] $end
$var wire 8 ( B [7:0] $end
$var wire 8 ) and_out [7:0] $end
$var wire 1 $ clk $end
$var wire 8 * or_out [7:0] $end
$var wire 1 % reset $end
$var wire 3 + sel [2:0] $end
$var wire 8 , xor_out [7:0] $end
$var wire 8 - sum [7:0] $end
$var wire 8 . right_shift [7:0] $end
$var wire 8 / left_shift [7:0] $end
$var reg 8 0 Result [7:0] $end
$var reg 8 1 counter [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
1%
0$
b0 #
b0 "
b0 !
$end
#5
1$
#10
b1 )
b111 *
b110 ,
b1000 !
b1000 0
b1010 /
b10 .
0$
b11 #
b11 (
b1000 -
b101 "
b101 '
0%
#15
b1 1
1$
#20
b1010 !
b1010 0
0$
b1 &
b1 +
#25
b10 1
1$
#30
b10 !
b10 0
0$
b10 &
b10 +
#35
b11 1
1$
#40
b11 !
b11 0
0$
b11 &
b11 +
#45
b100 !
b100 0
b100 1
1$
#50
0$
#55
b101 !
b101 0
b101 1
1$
#60
0$
#65
b110 !
b110 0
b110 1
1$
#70
0$
#75
b111 !
b111 0
b111 1
1$
#80
0$
#85
b1000 !
b1000 0
b1000 1
1$
#90
b1 !
b1 0
0$
b100 &
b100 +
#95
b1001 1
1$
#100
b111 !
b111 0
0$
b101 &
b101 +
#105
b1010 1
1$
#110
b110 !
b110 0
0$
b110 &
b110 +
#115
b1011 1
1$
#120
0$
